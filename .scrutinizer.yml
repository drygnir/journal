filter:
    excluded_paths:
        - 'js/3rdparty/*'

imports:
    - php
    - javascript

tools:
    php_mess_detector:
        config:
            controversial_rules: { camel_case_class_name: true, camel_case_property_name: true, camel_case_method_name: true, camel_case_parameter_name: true, camel_case_variable_name: true, superglobals: false }
    php_code_sniffer:
        config:
            sniffs: { generic: { white_space: { disallow_space_indent_sniff: true }, formatting: { multiple_statement_alignment_sniff: true } }, squiz: { white_space: { logical_operator_spacing_sniff: true, language_construct_spacing_sniff: true, operator_spacing_sniff: true, control_structure_spacing_sniff: true, function_spacing_sniff: true, scope_keyword_spacing_sniff: true, semicolon_spacing_sniff: true, object_operator_spacing_sniff: true }, functions: { lowercase_function_keywords_sniff: true }, commenting: { class_comment_sniff: true, doc_comment_alignment_sniff: true, function_comment_throw_tag_sniff: true }, control_structures: { lowercase_declaration_sniff: true }, strings: { double_quote_usage_sniff: true }, operators: { valid_logical_operators_sniff: true, comparison_operator_usage_sniff: true } }, psr2: { classes: { class_declaration_sniff: true }, namespaces: { namespace_declaration_sniff: true } }, pear: { commenting: { inline_comment_sniff: true }, control_structures: { control_signature_sniff: true }, naming_conventions: { valid_function_name_sniff: true, valid_class_name_sniff: true } } }

